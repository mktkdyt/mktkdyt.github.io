<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenLayers on mktkdyt</title>
    <link>https://mktkdyt.github.io/post/openlayers/</link>
    <description>Recent content in OpenLayers on mktkdyt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 14 Jan 2021 17:24:23 +0900</lastBuildDate><atom:link href="https://mktkdyt.github.io/post/openlayers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenLayers でアイコン（ポイント）を地図上に表示する</title>
      <link>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%92%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 14 Jan 2021 17:24:23 +0900</pubDate>
      
      <guid>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%82%92%E5%9C%B0%E5%9B%B3%E4%B8%8A%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid>
      <description>OpenLayersでアイコン（ポイント）を地図上に表示する ライブラリ参照  OpenLayers の js ライブラリとスタイルシートを参照します。  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css&amp;#34; type=&amp;#34;text/css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 画面  地図を描画する要素を用意します。  &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; スクリプト  ポイントフィーチャを作成します。 アイコン用のスタイルを定義し，フィーチャのスタイルとして割り当てます。  var center = [130.93, 31.9]; function addIconFeature() { var iconStyle = new ol.style.Style({ image: new ol.style.Icon({ src: &amp;#39;icon.png&amp;#39; }) }); var vectorLayer = new ol.layer.Vector({ source: new ol.source.Vector(), style: iconStyle }); var f = new ol.Feature(new ol.geom.Point(ol.proj.transform(center, &amp;#39;EPSG:4326&amp;#39;, &amp;#39;EPSG:3857&amp;#39;))); f.setStyle(iconStyle); vectorLayer.getSource().addFeature(f); map.addLayer(vectorLayer); } 成果物 下記ソースコードを html ファイルとして保存し，Webブラウザで表示します。</description>
    </item>
    
    <item>
      <title>OpenLayers で地図を表示する</title>
      <link>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E5%9C%B0%E5%9B%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 14 Jan 2021 17:24:23 +0900</pubDate>
      
      <guid>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E5%9C%B0%E5%9B%B3%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid>
      <description>OpenLayers で地図を表示する ライブラリ参照  OpenLayers の js ライブラリとスタイルシートを参照します。  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css&amp;#34; type=&amp;#34;text/css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 画面  地図を描画する要素を用意します。  &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; スクリプト  ベースマップとして OpenStreetMap を用意します。 ol.Map インスタンスを作成します。  target に画面で用意した要素の id を指定します。 layers に地図に表示したいレイヤを追加します。  今回はベースマップを追加します。   view で中心座標やズームレベルを設定します。   DOM構築完了後に地図初期化処理を実行します。  今回は jQuery にしました。    $(function(){ initializeMap(); }); function initializeMap() { const baseMap = new ol.layer.Tile({ source: new ol.source.OSM() }); var map = new ol.</description>
    </item>
    
    <item>
      <title>OpenLayers で現在の中心座標やズームレベルを表示する</title>
      <link>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%B8%AD%E5%BF%83%E5%BA%A7%E6%A8%99%E3%82%84%E3%82%BA%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%99%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</link>
      <pubDate>Thu, 14 Jan 2021 17:24:23 +0900</pubDate>
      
      <guid>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E7%8F%BE%E5%9C%A8%E3%81%AE%E4%B8%AD%E5%BF%83%E5%BA%A7%E6%A8%99%E3%82%84%E3%82%BA%E3%83%BC%E3%83%A0%E3%83%AC%E3%83%99%E3%83%AB%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B/</guid>
      <description>OpenLayers で現在の中心座標やズームレベルを表示する ライブラリ参照  OpenLayers の js ライブラリとスタイルシートを参照します。 jQuery，Knockout の js ライブラリも参照します。  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css&amp;#34; type=&amp;#34;text/css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://code.jquery.com/jquery-3.5.1.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-latest.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 画面  地図を描画する要素を用意します。 Knockout でズームレベルや中心座標を表示します。  &amp;lt;div id=&amp;#34;map&amp;#34; class=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;map-footer&amp;#34;&amp;gt; &amp;lt;div&amp;gt;Zoom Level: &amp;lt;span data-bind=&amp;#34;text: zoomLevel&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;Center: &amp;lt;span data-bind=&amp;#34;text: center&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; スクリプト  map をグローバル変数とします。 画面に表示するズームレベルや中心座標を ViewModel のプロパティに設定します。 ViewModel を View にバインドします。 map にイベントリスナーを追加します。  地図の移動が完了したら現在の中心座標とズームレベルを取得し，ViewModel のプロパティを更新します。    var map; $(function () { var vm = { zoomLevel: ko.</description>
    </item>
    
    <item>
      <title>OpenLayers で選択されたフィーチャのスタイルを変える</title>
      <link>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E9%81%B8%E6%8A%9E%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A3%E3%83%BC%E3%83%81%E3%83%A3%E3%81%AE%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%82%92%E5%A4%89%E3%81%88%E3%82%8B/</link>
      <pubDate>Thu, 14 Jan 2021 17:24:23 +0900</pubDate>
      
      <guid>https://mktkdyt.github.io/post/openlayers/openlayers%E3%81%A7%E9%81%B8%E6%8A%9E%E3%81%95%E3%82%8C%E3%81%9F%E3%83%95%E3%82%A3%E3%83%BC%E3%83%81%E3%83%A3%E3%81%AE%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%82%92%E5%A4%89%E3%81%88%E3%82%8B/</guid>
      <description>OpenLayers で選択されたフィーチャのスタイルを変える ライブラリ参照  OpenLayers の js ライブラリとスタイルシートを参照します。  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css&amp;#34; type=&amp;#34;text/css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 画面  地図を描画する要素を用意します。  &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; スクリプト  ol.interaction.Select() でフィーチャを選択出来るようになります。 interaction はマップに addInteraction() で追加する必要があります。 getFeatures() で選択されたフィーチャを取得出来るので，スタイルを変える場合はフィーチャが選択された時のイベントハンドラにスタイルを変える処理を実装します。  function initializeSelect() { var select = new ol.interaction.Select(); map.addInteraction(select); var selectedFeatures = select.getFeatures(); selectedFeatures.on([&amp;#39;add&amp;#39;, &amp;#39;remove&amp;#39;], function () { var selectedStyle = new ol.style.Style({ image: new ol.style.Circle({ radius: 8, fill: new ol.style.Fill({ color: &amp;#39;#FF0000&amp;#39; }), stroke: new ol.style.Stroke({ color: &amp;#39;#FFFFFF&amp;#39;, width: 3 }) }) }); var features = selectedFeatures.</description>
    </item>
    
  </channel>
</rss>
